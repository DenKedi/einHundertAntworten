<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport"
              content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
        <meta http-equiv="X-UA-Compatible" content="ie=edge">
        <link href="css/overview.css" type="text/css" rel="stylesheet">
        <link href="css/style.css" type="text/css" rel="stylesheet">
        <script src="http://localhost:35729/livereload.js" rel="preload" async></script>
        <script
                src="https://kit.fontawesome.com/dd8ea2651b.js"
                crossorigin="anonymous"
        ></script>
        <title>Document</title>
        <style>
        </style>
        <title>100 Antworten</title>
    </head>
    <body>
        <nav>
            <p><a class="title" href="/home">100 Antworten</a></p>
            <div>
                <a class="navIcon" href="/profile"><i class="fa-regular fa-user"></i></a>
                <a class="navIcon" href="/user/logout"><i class="fa-solid fa-arrow-right-from-bracket"></i></a>
            </div>
        </nav>

        <div class="main">
            <a href="/quizpanel" class="home-button">Show Quiz Panel Draft</a>

            <div class="dropdown">
                <button class="dropdown-button">Category</button>
                <div class="dropdown-content">
                    <span class="category-option">All</span>
                    <span class="category-option">Location</span>
                    <span class="category-option">Celebrity</span>
                    <span class="category-option">Number</span>
                </div>
            </div>
            <div class="gameobject-container">
                <div id="answer-container">
                    <h2>Antwort</h2>
                </div>
                <div id="questions-container">
                    <h2>Frage(n)</h2>
                </div>
            </div>
        </div>
        <script>
            window.onload = function() {
                selectCategoryListener();
            };

            function selectCategoryListener() {
                const options = document.getElementsByClassName('category-option');

                for (elem of options) {
                    elem.addEventListener('click', async function(e) {
                        await showGameObjects(this.innerHTML, this.innerHTML === 'All');
                    });
                };
            }

            async function showGameObjects(category, isAllSelected) {
                const gameObjects = await getGameObjects(category, isAllSelected);

                const answerContainer = document.getElementById('answer-container');
                answerContainer.innerHTML = '';
                const answerHeading = document.createElement('h2');
                answerHeading.innerText = 'Antwort';
                answerContainer.appendChild(answerHeading);

                const questionContainer = document.getElementById('questions-container');
                questionContainer.innerHTML = '';
                const questionHeading = document.createElement('h2');
                questionHeading.innerText = 'Frage(n)';
                questionContainer.appendChild(questionHeading);

                for (object of gameObjects) {
                    for (question of object.questions) {
                        const el = document.createElement('p');
                        el.innerText = question;
                        questionContainer.appendChild(el);
                    }
                    const answer = document.createElement('p');
                    answer.innerText = object.answer;
                    answerContainer.appendChild(answer);

                    for (let i = 0; i < object.questions.length - 1; i++) {
                        const empty = document.createElement('p');
                        empty.innerText = '';
                        empty.classList.add('empty');
                        answerContainer.appendChild(empty);
                    }
                };
            }

            async function getGameObjects(category, isAllSelected) {
                const url = isAllSelected ? '/game/getAll' : '/game/get?category=' + category;
                let responseData;

                // Use Token from LocalStorage after Login
                await fetch(url, {
                    method: 'GET',
                    headers: {
                        Authorization: 'Bearer eyJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJzZWxmIiwic3ViIjoidXNlcjEiLCJleHAiOjE3MDA3ODIzMzcsImlhdCI6MTcwMDc3ODczNywic2NvcGUiOiJVU0VSIn0.bbppaJGIHxib5bbFJTxG4lAT9awiTI28IC5ikojypcu7nmB0-V7qNPPMYOry1d0M8Cio1kBaclw1XNnvG9C6VKYmBtPqedAFo4CyWe6NgWSXG8f7z3lXlPgbnMgT2O-p4exmvt8gLkPe1HjyQmKLPeEx9gRMQWsNhJXW3slmk0H4Rt0SXsb2jhLgwMGn7MIp1pacmemzbUWLHXvEGdMkwBuMWx10NWiW2wE6tTo6bPD2zGb0lmAjyqpvHlIm_3lZ9dr7sjaLV4NrhsCkPsNPammiFBDy2AY3g8I2fMn3QdVAovUqO9Sp5zd_bi4EETvS1vE91xLELIk4ZV7bbtdnbQ',
                    },
                })
                .then(res => res.json())
                .then(data => {
                    responseData = data;
                })
                .catch(error => {
                   console.error('Error during fetch operation:', error);
                });

                return responseData;
            }

        </script>
    </body>
</html>